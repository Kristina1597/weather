{"version":3,"sources":["components/weatherInfo/mainInfo/MainInfo.module.css","components/header/forms/Forms.module.css","components/WeatherContainer.module.css","components/weatherInfo/description/Description.module.css","components/header/Header.module.css","API/apiWeather.js","redux/weatherReducer.js","components/header/forms/ChangeCityForm.jsx","components/header/forms/ChangeUnitsForm.jsx","assets/location.svg","components/header/Header.jsx","components/weatherInfo/description/Description.jsx","assets/cloud.svg","assets/partlyCloudy.svg","assets/rain.svg","assets/storm.svg","assets/sun.svg","assets/mist.svg","assets/snowy.svg","components/weatherInfo/mainInfo/MainInfo.jsx","components/WeatherInfoContainer.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","API_KEY","weatherAPI","lat","lon","units","axios","get","cityAPI","GET_WEATHER","CHANGE_UNIT","CHANGE_CITY","ADD_LOCAL_CITY","citiesList","id","name","isCurrent","setInitialState","el","Array","from","find","c","currentCoords","navigator","geolocation","getCurrentPosition","position","currentLat","coords","latitude","toFixed","currentLon","longitude","push","initialState","weatherIndicators","temp","weatherMainDescription","weatherDescription","windSpeed","windDirection","pressure","humidity","probabilityPrecipitation","cities","currentCity","currentUnit","localCity","getWeatherActionCreator","type","changeCityActionCreator","city","addLocalCityActionCreator","requestWeather","dispatch","a","data","current","weather","main","description","wind_speed","wind_deg","daily","pop","weatherReducer","state","action","unit","forEach","ChangeCityForm","props","Object","values","assign","map","newCities","useState","formValue","setFormValue","isListOpened","setListOpening","isListFiltered","setListFiltered","filteredCities","setCities","onChooseCity","e","currentTarget","textContent","className","cn","style","form_blockWithForm","form_openedList","form_blockWithInput","onChange","value","length","toLowerCase","includes","onBlur","onFocus","form_input","tabIndex","form_button","onClick","setLocalCityChosen","newCurrentCityName","parentElement","children","changeCity","turnOffEditMode","form_blockWithList","hidden_all","form_listItem","onMouseDown","key","ChangeUnitsForm","onChangeUnit","attributes","nodeValue","changeUnit","unitsForm_wrapper","unitsForm_degree","unitsForm_buttons","unitsForm_button_F","unitsForm_button_active","unitsForm_button_C","Header","isEditMode","setEditMode","isLocalCityChosen","headerWrapper","header_form","header_form_editState","unitForm","unitForm_mobile","header_cityForm","header_cityForm_currentCity","header_cityForm_settings","cityForm_changeCityButton","addLocalCity","cityForm_changeMyLocationButton","src","location","Description","speedUnit","description_wrapper","description_block","description_item","description_item_name","description_item_value","Math","round","MainInfo","icon","partlyCloudy","cloud","rain","storm","sun","mist","snow","mainInfo_wrapper","mainInfo_block","mainInfo_blockWithTemp","mainInfo_icon","mainInfo_temp","mainInfo_temp_degree","mainInfo_blockWithDescription","charAt","toUpperCase","slice","WeatherContainer","this","store","prevProps","prevState","snapshot","appWrapper","appWrapper_clear","appWrapper_rain","React","Component","connect","changeUnitActionCreator","local_names","ru","App","WeatherInfoContainer","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleWare","__store__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2792b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInfo_wrapper\":\"MainInfo_mainInfo_wrapper__2p17c\",\"mainInfo_block\":\"MainInfo_mainInfo_block__2_gck\",\"mainInfo_blockWithTemp\":\"MainInfo_mainInfo_blockWithTemp__1xUGc\",\"mainInfo_temp\":\"MainInfo_mainInfo_temp__3BHC4\",\"mainInfo_temp_degree\":\"MainInfo_mainInfo_temp_degree__NWp7y\",\"mainInfo_blockWithDescription\":\"MainInfo_mainInfo_blockWithDescription__38Vt3\",\"mainInfo_icon\":\"MainInfo_mainInfo_icon__xZddc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitsForm_wrapper\":\"Forms_unitsForm_wrapper__5kNv0\",\"unitsForm_degree\":\"Forms_unitsForm_degree__JSEDE\",\"unitsForm_buttons\":\"Forms_unitsForm_buttons__3BEYR\",\"unitsForm_button_F\":\"Forms_unitsForm_button_F__3_pDe\",\"unitsForm_button_C\":\"Forms_unitsForm_button_C__lXGOP\",\"unitsForm_button_active\":\"Forms_unitsForm_button_active__ITcba\",\"wrapper\":\"Forms_wrapper__rOUoa\",\"form_blockWithForm\":\"Forms_form_blockWithForm__3-HAu\",\"form_openedList\":\"Forms_form_openedList__2Gu6t\",\"form_blockWithInput\":\"Forms_form_blockWithInput__rrVtR\",\"form_input\":\"Forms_form_input__3A-rE\",\"form_button\":\"Forms_form_button__3XP-1\",\"form_blockWithList\":\"Forms_form_blockWithList__1stD-\",\"form_listItem\":\"Forms_form_listItem__1dZ3Z\",\"custom_select_options\":\"Forms_custom_select_options__TD-PM\",\"hidden_all\":\"Forms_hidden_all__3XodM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"WeatherContainer_appWrapper__2PpaG\",\"appWrapper_rain\":\"WeatherContainer_appWrapper_rain__3GYTJ\",\"appWrapper_clear\":\"WeatherContainer_appWrapper_clear__3Pk6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_wrapper\":\"Description_description_wrapper__15wUf\",\"description_block\":\"Description_description_block__2npzd\",\"description_item\":\"Description_description_item__2VbQS\",\"description_item_name\":\"Description_description_item_name__16-SB\",\"description_item_value\":\"Description_description_item_value__17I2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__1VkeA\",\"header_form\":\"Header_header_form__2Sb8V\",\"header_form_editState\":\"Header_header_form_editState__3ttMm\",\"header_cityForm\":\"Header_header_cityForm__3oqje\",\"header_cityForm_currentCity\":\"Header_header_cityForm_currentCity__1ziBI\",\"header_cityForm_settings\":\"Header_header_cityForm_settings__2Jotl\",\"cityForm_changeCityButton\":\"Header_cityForm_changeCityButton__vPyzd\",\"cityForm_changeMyLocationButton\":\"Header_cityForm_changeMyLocationButton__14BPg\",\"unitForm\":\"Header_unitForm__2zFbK\",\"unitForm_mobile\":\"Header_unitForm_mobile__3oJjy\"};","import axios from \"axios\";\r\n\r\nconst API_KEY = 'API_KEY';\r\n\r\nexport const weatherAPI = {\r\n    getWeather(lat, lon, units){\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly, minutely&appid=${API_KEY}&units=${units}&lang=ru`);\r\n    },\r\n};\r\n\r\nexport const cityAPI = {\r\n    getCity(lat, lon) {\r\n        return axios.get(`http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=4&appid=${API_KEY}`)\r\n    }\r\n};","import {cityAPI, weatherAPI} from \"../API/apiWeather\";\r\n\r\nconst GET_WEATHER = \"GET_WEATHER\";\r\nconst CHANGE_UNIT = \"CHANGE_UNIT\";\r\nconst CHANGE_CITY = \"CHANGE_CITY\";\r\nconst ADD_LOCAL_CITY = \"ADD_CITY\";\r\n\r\nconst units = ['metric', 'imperial'];\r\n\r\nconst citiesList = [\r\n    {id: 'vladivostok', name: 'Владивосток', lat: 43.1056, lon: 131.8735, isCurrent: false},\r\n    {id: 'volgograd', name: 'Волгоград', lat: 48.7194, lon: 44.5018, isCurrent: false},\r\n    {id: 'kazan', name: 'Казань', lat: 55.7887, lon: 49.1221, isCurrent: false},\r\n    {id: 'sochi', name: 'Сочи', lat: 43.6, lon: 39.7303, isCurrent: false},\r\n    {id: 'krasnoyarsk', name: 'Красноярск', lat: 56.0097, lon: 92.7917, isCurrent: false},\r\n    {id: 'moscow', name: 'Москва', lat: 55.7522, lon: 37.6156, isCurrent: false},\r\n    {id: 'novosibirsk', name: 'Новосибирск', lat: 55.0415000, lon: 82.9346000, isCurrent: true},\r\n    {id: 'tyumen', name: 'Тюмень', lat: 55.7887400, lon: 49.1221400, isCurrent: false},\r\n    {id: 'ufa', name: 'Уфа', lat: 54.7430600, lon: 55.9677900, isCurrent: false}\r\n];\r\n\r\nconst setInitialState = (el) => {\r\n    let currentCity;\r\n    switch (el) {\r\n        case 'cities':\r\n            return Array.from(citiesList);\r\n        case 'units':\r\n            return units;\r\n        case 'current':\r\n            currentCity = citiesList.find((c) => {\r\n                return c.isCurrent\r\n            });\r\n            return currentCity;\r\n        case 'personalLocation': {\r\n            let currentCoords = [];\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const currentLat = position.coords.latitude.toFixed(4);\r\n                const currentLon = position.coords.longitude.toFixed(4);\r\n                currentCoords.push(currentLat, currentLon);\r\n            });\r\n            return currentCoords\r\n        }\r\n\r\n        default:\r\n            return\r\n    }\r\n};\r\n\r\nconst initialState = {\r\n    weatherIndicators: {\r\n        temp: '',\r\n        weatherMainDescription: '',\r\n        weatherDescription: '',\r\n        windSpeed: '',\r\n        windDirection: '',\r\n        pressure: '',\r\n        humidity: '',\r\n        probabilityPrecipitation: ''\r\n    },\r\n\r\n    cities: setInitialState('cities'),\r\n    units: setInitialState('units'),\r\n    currentCity: setInitialState('current'),\r\n    currentUnit: 'metric',\r\n    localCity: setInitialState('personalLocation')\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_WEATHER:\r\n            return {\r\n                ...state,\r\n                weatherIndicators: action.weatherIndicators,\r\n            };\r\n        case CHANGE_UNIT:\r\n\r\n            return {\r\n                ...state,\r\n                currentUnit: action.unit\r\n            };\r\n        case CHANGE_CITY:\r\n\r\n            state.cities.forEach((c) => {\r\n                c.name !== action.city.name ? c.isCurrent = false : c.isCurrent = true;\r\n                c.name === action.city ? (state.localCity.isCurrent = false) && (c.isCurrent = true) : c.isCurrent = false;\r\n            });\r\n\r\n            if (state.localCity.isCurrent) {\r\n                return {\r\n                    ...state,\r\n                    cities: [...state.cities],\r\n                    currentCity: action.city\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities],\r\n                currentCity: state.cities.find((c) => {\r\n                    return c.name === action.city\r\n                })\r\n            };\r\n        case ADD_LOCAL_CITY:\r\n            return {\r\n                ...state,\r\n                localCity: action.city\r\n            };\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\n\r\nexport const getWeatherActionCreator = (weatherIndicators) => ({type: GET_WEATHER, weatherIndicators});\r\nexport const changeUnitActionCreator = (unit) => ({type: CHANGE_UNIT, unit});\r\nexport const changeCityActionCreator = (city) => ({type: CHANGE_CITY, city});\r\nexport const addLocalCityActionCreator = (city) => ({type: ADD_LOCAL_CITY, city});\r\n\r\nexport const requestWeather = (lat, lon, units) => {\r\n    return async (dispatch) => {\r\n        let data = await weatherAPI.getWeather(lat, lon, units);\r\n\r\n        let weatherIndicators = {\r\n            temp: data.data.current.temp,\r\n            weatherMainDescription: data.data.current.weather[0].main,\r\n            weatherDescription: data.data.current.weather[0].description,\r\n            windSpeed: data.data.current.wind_speed,\r\n            windDirection: data.data.current.wind_deg,\r\n            pressure: data.data.current.pressure,\r\n            humidity: data.data.current.humidity,\r\n            probabilityPrecipitation: data.data.daily[0].pop\r\n        };\r\n\r\n        dispatch(getWeatherActionCreator(weatherIndicators));\r\n    }\r\n};\r\n\r\n//выбираю третий вариант, так как в ответе приходят различные массивы городов и поселков, находящихся рядом, и один из них - якутский поселок. Текущее местоположение чаще всего совпадает с 3 вариантом\r\n//TODO найти более логичное решение\r\n\r\nexport const addLocalCity = (lat, lon, units) => {\r\n    return async (dispatch) => {\r\n        let city = await cityAPI.getCity(lat, lon);\r\n        let localCity = {\r\n            id: city.data[3].local_names.id,\r\n            name: city.data[3].local_names.ru,\r\n            lat: city.data[3].lat,\r\n            lon: city.data[3].lon,\r\n            isCurrent: true\r\n        };\r\n        dispatch(addLocalCityActionCreator(localCity));\r\n        dispatch(changeCityActionCreator(localCity));\r\n        dispatch(requestWeather(lat, lon, units));\r\n    }\r\n};\r\n\r\nexport default weatherReducer;","import React, {useState} from \"react\";\r\nimport style from './Forms.module.css';\r\nimport cn from \"classnames\"\r\n\r\nconst ChangeCityForm = (props) => {\r\n\r\n    const cities = Object.values(Object.assign({}, props.cities.map((c) => c.name)));\r\n    let newCities = [];\r\n\r\n    const [formValue, setFormValue] = useState(props.currentCity.name);\r\n    const [isListOpened, setListOpening] = useState(false);\r\n    const [isListFiltered, setListFiltered] = useState(false);\r\n    const [filteredCities, setCities] = useState(\"\");\r\n\r\n    let onChange = (e) => {\r\n        newCities = [];\r\n        let value = e.currentTarget.value;\r\n        setListFiltered((value.length !== 0));\r\n        setListOpening(true);\r\n        setFormValue(value);\r\n\r\n        cities.forEach((c) => {\r\n            if (c.toLowerCase().includes(value.toLowerCase())) {\r\n                newCities.push(c);\r\n            }\r\n        });\r\n\r\n        setCities(newCities);\r\n    };\r\n\r\n    let openList = () => {\r\n        setListOpening(true);\r\n    };\r\n\r\n    let closeList = () => {\r\n        setListOpening(false)\r\n    };\r\n\r\n    let onChooseCity = (e) => {\r\n        setFormValue(e.currentTarget.textContent);\r\n    };\r\n\r\n    let onSubmit = (e) => {\r\n        props.setLocalCityChosen(false);\r\n        let newCurrentCityName = e.currentTarget.parentElement.children[0].value;\r\n        props.cities.forEach((c) => {\r\n            if (c.name === newCurrentCityName) {\r\n                props.changeCity(newCurrentCityName);\r\n                props.turnOffEditMode();\r\n            }\r\n        });\r\n    };\r\n\r\n    return (<div className={cn(style.form_blockWithForm, {[style.form_openedList]: isListOpened})}>\r\n            <div className={style.form_blockWithInput}>\r\n                <input onChange={onChange}\r\n                       onBlur={closeList}\r\n                       onFocus={openList}\r\n                       className={style.form_input}\r\n                       type={'text'}\r\n                       tabIndex={-1}\r\n                       value={formValue}/>\r\n                <button className={style.form_button}\r\n                        onClick={onSubmit}>\r\n                    OK\r\n                </button>\r\n            </div>\r\n            <div className={cn(style.form_blockWithList, {[style.hidden_all]: !isListOpened})}>\r\n                {isListFiltered ? filteredCities.map((c) => <div key={c.key}\r\n                                                                 tabIndex={10}\r\n                                                                 className={style.form_listItem}\r\n                                                                 onMouseDown={onChooseCity}>\r\n                        {c}\r\n                    </div>)\r\n                    : cities.map((c) => <div key={c.key}\r\n                                             tabIndex={10}\r\n                                             className={style.form_listItem}\r\n                                             onMouseDown={onChooseCity}>\r\n                        {c}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChangeCityForm;\r\n","import React from \"react\";\r\nimport style from './Forms.module.css'\r\nimport cn from \"classnames\";\r\n\r\nconst ChangeUnitsForm = (props) => {\r\n\r\n    let onChangeUnit = (value) => {\r\n        let name = value.currentTarget.attributes.value.nodeValue;\r\n        props.changeUnit(name);\r\n    };\r\n\r\n    return(\r\n        <div className={style.unitsForm_wrapper}>\r\n            <div className={style.unitsForm_degree}>° </div>\r\n            <div className={style.unitsForm_buttons}>\r\n                <div className={cn(style.unitsForm_button_F, {[style.unitsForm_button_active]: props.currentUnit === 'imperial'})} onClick={onChangeUnit} value={'imperial'}>\r\n                    <div>\r\n                        F\r\n                    </div>\r\n                </div>\r\n                <div className={cn(style.unitsForm_button_C, {[style.unitsForm_button_active]: props.currentUnit === 'metric'})} onClick={onChangeUnit} value={'metric'}>\r\n                    <div>\r\n                        C\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n};\r\n\r\nexport default ChangeUnitsForm;\r\n","export default __webpack_public_path__ + \"static/media/location.2dfb72ad.svg\";","import style from './Header.module.css'\r\nimport React, {useState} from \"react\";\r\nimport ChangeCityForm from \"./forms/ChangeCityForm\";\r\nimport ChangeUnitsForm from \"./forms/ChangeUnitsForm\";\r\nimport {ReactSVG} from \"react-svg\";\r\nimport location from \"./../../assets/location.svg\"\r\nimport cn from \"classnames\"\r\n\r\nconst Header = (props) => {\r\n    let [isEditMode, setEditMode] = useState(false);\r\n    const [isLocalCityChosen, setLocalCityChosen] = useState(false);\r\n\r\n    let turnOnEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    let turnOffEditMode = () => {\r\n        setEditMode(false)\r\n    };\r\n\r\n    let getPersonalForecast = () => {\r\n        props.localCity && props.localCity.length >= 2\r\n            ? props.addLocalCity(props.localCity[0], props.localCity[1], props.currentUnit)\r\n            : props.addLocalCity(props.localCity.lat, props.localCity.lon, props.currentUnit)\r\n    };\r\n\r\n    let onChooseLocalCity = () => {\r\n        getPersonalForecast();\r\n        setLocalCityChosen(true);\r\n    };\r\n\r\n    return <div className={style.headerWrapper}>\r\n        {isEditMode ?\r\n            <div className={style.header_form}>\r\n                <div className={style.header_form_editState}>\r\n                    <ChangeCityForm isEditMode={isEditMode}\r\n                                    turnOffEditMode={turnOffEditMode}\r\n                                    requestWeather={props.requestWeather}\r\n                                    localCity={props.localCity}\r\n                                    isLocalCityChosen={isLocalCityChosen}\r\n                                    setLocalCityChosen={setLocalCityChosen}\r\n                                    changeCity={props.changeCity}\r\n                                    cities={props.cities}\r\n                                    currentCity={props.currentCity}\r\n                    />\r\n                    <div className={cn(style.unitForm, {[style.unitForm_mobile]: isEditMode})}>\r\n                        <ChangeUnitsForm requestWeather={props.requestWeather}\r\n                                         currentUnit={props.currentUnit}\r\n                                         changeUnit={props.changeUnit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <div className={style.header_form}>\r\n                <div className={style.header_cityForm}>\r\n                    <div className={style.header_cityForm_currentCity}>\r\n                        {isLocalCityChosen ? props.localCity.name : props.currentCity.name}\r\n                    </div>\r\n                    <div className={style.unitForm}>\r\n                        <ChangeUnitsForm requestWeather={props.requestWeather}\r\n                                         currentUnit={props.currentUnit}\r\n                                         changeUnit={props.changeUnit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={style.header_cityForm_settings}>\r\n                    <button className={style.cityForm_changeCityButton}\r\n                            onClick={turnOnEditMode}>\r\n                        Сменить город\r\n                    </button>\r\n                    <button onClick={onChooseLocalCity} className={style.cityForm_changeMyLocationButton}>\r\n                        <ReactSVG src={location}/>Мое местоположение\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n    </div>\r\n};\r\n\r\nexport default Header;","import style from './Description.module.css'\r\nimport React from \"react\";\r\n\r\nconst Description = (props) => {\r\n\r\n    let windDirection;\r\n\r\n    ((0 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 23) || (337 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 360))\r\n    && (windDirection = 'Северный');\r\n    (24 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 68) && (windDirection = 'Северо-восточный');\r\n    (69 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 113) && (windDirection = 'Восточный');\r\n    (114 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 158) && (windDirection = 'Юго-восточный');\r\n    (159 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 203) && (windDirection = 'Южный');\r\n    (204 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 248) && (windDirection = 'Юго-западный');\r\n    (249 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 293) && (windDirection = 'Западный');\r\n    (294 <= props.weatherIndicators.windDirection && props.weatherIndicators.windDirection <= 336) && (windDirection = 'Северо-западный');\r\n\r\n    let speedUnit = (props.currentUnit === 'metric') ? ' м/с, ' : \" миль/ч, \";\r\n\r\n    return <div className={style.description_wrapper}>\r\n        <div className={style.description_block}>\r\n            <div className={style.description_item}>\r\n                <div className={style.description_item_name}>\r\n                    Ветер\r\n                </div>\r\n                <div className={style.description_item_value}>\r\n                    {props.weatherIndicators.windSpeed + speedUnit + windDirection}\r\n                </div>\r\n            </div>\r\n            <div className={style.description_item}><div className={style.description_item_name}>\r\n                Давление\r\n            </div>\r\n                <div className={style.description_item_value}>\r\n                    {props.weatherIndicators.pressure + ' мм рт. ст.'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={style.description_block}>\r\n            <div className={style.description_item}>\r\n                <div className={style.description_item_name}>\r\n                    Влажность\r\n                </div>\r\n                <div className={style.description_item_value}>\r\n                    {props.weatherIndicators.humidity + '%'}\r\n                </div>\r\n            </div>\r\n            <div className={style.description_item}>\r\n                <div className={style.description_item_name}>\r\n                    Вероятность дождя\r\n                </div>\r\n                <div className={style.description_item_value}>\r\n                    {Math.round(props.weatherIndicators.probabilityPrecipitation * 100 )+ '%'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Description;","export default __webpack_public_path__ + \"static/media/cloud.537bf324.svg\";","export default __webpack_public_path__ + \"static/media/partlyCloudy.bd05e8ee.svg\";","export default __webpack_public_path__ + \"static/media/rain.6db22cb2.svg\";","export default __webpack_public_path__ + \"static/media/storm.8596a268.svg\";","export default __webpack_public_path__ + \"static/media/sun.5f4a8e48.svg\";","export default __webpack_public_path__ + \"static/media/mist.45f5c3f3.svg\";","export default __webpack_public_path__ + \"static/media/snowy.b7b18d18.svg\";","import style from './MainInfo.module.css'\r\nimport React from \"react\";\r\nimport Description from \"../description/Description\";\r\nimport cloud from '../../../assets/cloud.svg'\r\nimport partlyCloudy from '../../../assets/partlyCloudy.svg'\r\nimport rain from '../../../assets/rain.svg'\r\nimport storm from '../../../assets/storm.svg'\r\nimport sun from '../../../assets/sun.svg'\r\nimport mist from '../../../assets/mist.svg'\r\nimport snow from '../../../assets/snowy.svg'\r\nimport {ReactSVG} from \"react-svg\";\r\n\r\nconst MainInfo = (props) => {\r\n\r\n    let icon;\r\n    switch (props.weatherIndicators.weatherMainDescription) {\r\n        case \"Clouds\":\r\n            props.weatherIndicators.weatherDescription === 'облачно с прояснениями' ? icon = partlyCloudy : icon = cloud;\r\n            break;\r\n        case \"Rain\":\r\n            icon = rain;\r\n            break;\r\n        case \"Thunderstorm\":\r\n            icon = storm;\r\n            break;\r\n        case \"Clear\":\r\n            icon = sun;\r\n            break;\r\n        case \"Mist\":\r\n            icon = mist;\r\n            break;\r\n        case \"Snow\":\r\n            icon = snow;\r\n            break;\r\n        default: break\r\n    }\r\n\r\n    return <div className={style.mainInfo_wrapper}>\r\n        <div className={style.mainInfo_block}>\r\n            <div className={style.mainInfo_blockWithTemp}>\r\n                <div className={style.mainInfo_icon}>\r\n                    <ReactSVG src={icon}/>\r\n                </div>\r\n                <div className={style.mainInfo_temp}>\r\n                    {Math.round(props.weatherIndicators.temp)}\r\n                    <span className={style.mainInfo_temp_degree}>o</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.mainInfo_blockWithDescription}>\r\n                {props.weatherIndicators.weatherDescription.charAt(0).toUpperCase() + props.weatherIndicators.weatherDescription.slice(1)}\r\n            </div>\r\n        </div>\r\n\r\n        <Description currentUnit={props.currentUnit}\r\n                     weatherIndicators={props.weatherIndicators}/>\r\n    </div>\r\n};\r\n\r\nexport default MainInfo;","import style from './WeatherContainer.module.css'\r\nimport React from \"react\";\r\nimport {addLocalCity, changeCityActionCreator, changeUnitActionCreator, requestWeather} from \"../redux/weatherReducer\";\r\nimport Header from \"./header/Header\";\r\nimport MainInfo from \"./weatherInfo/mainInfo/MainInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport cn from \"classnames\"\r\n\r\nclass WeatherContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestWeather(this.props.store.currentCity.lat, this.props.store.currentCity.lon, this.props.store.currentUnit)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.store.currentCity.id !== prevProps.store.currentCity.id || this.props.store.currentUnit !== prevProps.store.currentUnit) {\r\n            this.props.requestWeather(this.props.store.currentCity.lat, this.props.store.currentCity.lon, this.props.store.currentUnit)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className={cn(style.appWrapper,\r\n            {[style.appWrapper_clear]: this.props.weatherIndicators.weatherMainDescription === 'Clear'},\r\n            {[style.appWrapper_rain]: this.props.weatherIndicators.weatherMainDescription === 'Rain'},)}>\r\n            <Header\r\n                currentUnit={this.props.currentUnit}\r\n                currentCity={this.props.currentCity}\r\n                cities={this.props.cities}\r\n                localCity={this.props.localCity}\r\n                requestWeather={this.props.requestWeather}\r\n                changeUnit={this.props.changeUnit}\r\n                changeCity={this.props.changeCity}\r\n                addLocalCity={this.props.addLocalCity}/>\r\n            <MainInfo currentUnit={this.props.currentUnit}\r\n                      weatherIndicators={this.props.weatherIndicators}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store) => (\r\n    {\r\n        currentUnit: store.weather.currentUnit,\r\n        currentCity: store.weather.currentCity,\r\n        cities: store.weather.cities,\r\n        weatherIndicators: store.weather.weatherIndicators,\r\n        localCity: store.weather.localCity\r\n    });\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        requestWeather: (lat, lon, units) => {\r\n            dispatch(requestWeather(lat, lon, units));\r\n        },\r\n        changeUnit: (unit) => {\r\n            dispatch(changeUnitActionCreator(unit))\r\n        },\r\n        changeCity: (city) => {\r\n            dispatch(changeCityActionCreator(city))\r\n        },\r\n        addLocalCity: (lat, lon, units) => {\r\n            dispatch(addLocalCity(lat, lon, units))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer);","import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport WeatherInfoContainer from \"./components/WeatherInfoContainer\";\n\nclass App extends Component {\n    render() {\n        return (\n            <WeatherInfoContainer store={this.props.store}/>\n        );\n    }\n}\n\nexport default connect(state => ({store: state.weather}))(App);\n","\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nlet reducer = combineReducers({\r\n    weather: weatherReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}